--- match_alphanumeric/code/app/Main.hs	2022-10-28 09:12:30.254351985 +0200
+++ positive_character_groups/code/app/Main.hs	2022-10-28 09:59:41.077258075 +0200
@@ -4,6 +4,9 @@
 import System.Environment
 import System.Exit
 
+getAllowedCharacters :: String -> String
+getAllowedCharacters s = take (length s - 2) $ tail s
+
 matchPattern :: String -> String -> Bool
 matchPattern pat input = do
   if pat == "\\d"
@@ -12,9 +15,12 @@
       if pat == "\\w"
         then any (\c -> isAlphaNum c || c == '_') input
         else
-          if length pat == 1
-            then head pat `elem` input
-            else error $ "Unhandled pattern: " ++ pat
+          if head pat == '['
+            then or $ fmap (`elem` input) (getAllowedCharacters pat)
+            else
+              if length pat == 1
+                then head pat `elem` input
+                else error $ "Unhandled pattern: " ++ pat
 
 main :: IO ()
 main = do
