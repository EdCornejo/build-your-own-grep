@@ -1,35 +1,49 @@
 use std::env;
 use std::io;
 use std::process;

 fn match_pattern(input_line: &str, pattern: &str) -> bool {
     match pattern {
         r"\d" => {
             for ch in input_line.chars() {
                 match ch {
-                    '0'..='9' => return true,
+                    '0'..='9' => {
+                        return true;
+                    }
+                    _ => continue,
+                }
+            }
+
+            false
+        }
+        r"\w" => {
+            for ch in input_line.chars() {
+                match ch {
+                    '0'..='9' | 'a'..='z' | 'A'..='Z' | '_' => {
+                        return true;
+                    }
                     _ => continue,
                 }
             }

             false
         }
         _ => {
             if pattern.chars().count() == 1 {
                 input_line.contains(pattern)
             } else {
                 panic!("Unhandled pattern: {}", pattern);
             }
         }
     }
 }

 // Usage: echo <input_text> | your_grep.sh -E <pattern>
 fn main() {
     if env::args().nth(1).unwrap() != "-E" {
         println!("Expected first argument to be '-E'");
         process::exit(1);
     }

     let pattern = env::args().nth(2).unwrap();
     let mut input_line = String::new();
